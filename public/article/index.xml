<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>All articles on Top Quality Developer Tutorials CodeThat.today</title><link>https://theodesp.github.io/codethat/article/</link><description>Recent content in All articles on Top Quality Developer Tutorials CodeThat.today</description><language>en-us</language><lastBuildDate>Mon, 11 Sep 2017 14:15:59 -0600</lastBuildDate><atom:link href="https://theodesp.github.io/codethat/article/index.xml" rel="self" type="application/rss+xml"/><item><title>How Machine Learning and AI could eventually replace development work</title><link>https://theodesp.github.io/codethat/article/how-machine-learning-and-ai-could-eventually-replace-development-work/</link><pubDate>Mon, 11 Sep 2017 14:15:59 -0600</pubDate><guid>https://theodesp.github.io/codethat/article/how-machine-learning-and-ai-could-eventually-replace-development-work/</guid><description>&lt;p&gt;Recently I’ve been seeing more articles regarding the status of Artificial Intelligence and Machine Learning. Some doomsday prophecies like &lt;a href=&#34;https://www.wired.com/2016/05/the-end-of-code/&#34;&gt;the end of code&lt;/a&gt; others say that it will make &lt;a href=&#34;http://uk.businessinsider.com/google-on-machine-learning-2015-10?r=US&amp;amp;IR=T&#34;&gt;humans dependant on AI assistants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While I agree with most of the opinions expressed about those topics, I feel that the future will not be just a total dependence or replacement of the human factor in those areas.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It will be a transformation phase for sure that will span over the years to come.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There will be more and more practical applications of AI and ML that will help replace the dangerous and reckless human factor, for example, &lt;a href=&#34;https://www.wired.com/2015/05/oh-look-evidence-humans-shouldnt-driving/&#34;&gt;driving vehicles&lt;/a&gt; or &lt;a href=&#34;http://nypost.com/2016/10/18/pilots-could-soon-lose-their-jobs-to-robots/&#34;&gt;aircrafts&lt;/a&gt;. For sure humans will only be observers, only having their minds clear to check if anything will go wrong so they can jump in and correct.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is a natural transition as we humans are crafters&lt;/strong&gt;. We are used to creating tools to help us perform jobs bigger than ourselves. We started in the ancient times with axes, picks, iron forging, machines, automation tools to make us stronger. Now we are just trying to create something smarter (in theory) from us. It’s unavoidable.&lt;/p&gt;
&lt;p&gt;Those tools though however sophisticated though have some limitations and those limitations are expressed in terms of our own limitations of thinking.&lt;/p&gt;
&lt;p&gt;Unless for example, we prove that we can construct a program that is free of all bugs then our tools can only go so far. &lt;a href=&#34;http://wiki.c2.com/?ProofsCantProveTheAbsenceOfBugs&#34;&gt;See relevant link&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is fundamental. If we can construct such a proof then we can train machines to create 100% bug free programs thus making SW Engineers redundant.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;How can you prove that with 100% confidence? It turns out that it&amp;rsquo;s impossible within the time limits.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, it’s certainly possible to prove the absence many common classes of bugs. Or the code does look sound and has good design characteristics. It doesn’t do anything that will compromise rules within a restricted set of variables.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So with that fact, we can be almost sure that our programs do work as intended maybe 99.99% correct which means that we will still need a human factor to account for the last 0.01%, just make sure that there is no apparent risk.&lt;/p&gt;
&lt;p&gt;Thus for the current situation, we might brainstorm the various possible transformations that ML and AI could do to replace certain development work in the near future.&lt;/p&gt;
&lt;p&gt;In the rest of the article I will propose some potential transformations.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;transformation-1-automating-code-reviews-and-code-checking&#34;&gt;Transformation 1: Automating Code reviews and Code Checking&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#transformation-1-automating-code-reviews-and-code-checking&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;images/tran-1.jpg&#34; alt=&#34;goku&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ML and AI assistants will perform automated code reviews the moment we push code to repositories. They will comment out unusual code blocks and perform vulnerability and static code analysis. They will correct those issues and do a PR again for review.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Those bot assistants will become more intelligent and they will perform automated code reviews and comment the code in case it makes no sense based on the training data from similar code or codebases. They will perform correcting fixes and push back the changes for PR. A human will only be needed as a second pair of eyes and to do the merge.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;transformation-2-declarative-programming-model&#34;&gt;Transformation 2: Declarative programming model&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#transformation-2-declarative-programming-model&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;images/tran-2.png&#34; alt=&#34;super goku&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Instead of writing imperative code we will use a more declarative model for many parts of the system. It such case we will be writing code using a natural language style. We will declare our functional and non functional requirements and our technical requirements and the ML assistant will train models to produce code that abides to those constraints.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More and more blocks of functionality can be moved into this model. For example, http servers, CLI applications, UI applications have a lot of boilerplate. This can be used as a model for training ML assistants to produce code that matches a declaration file. Thus it will be easier to spin up applications without even touching the keyboard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You will speak what your application does and it will just be written by itself for you&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;transformation-3-automatic-deployment-orchestration-configuration-disaster-recovery-and-testing&#34;&gt;Transformation 3: Automatic Deployment, Orchestration, Configuration, Disaster Recovery and Testing&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#transformation-3-automatic-deployment-orchestration-configuration-disaster-recovery-and-testing&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;images/tran-3.jpg&#34; alt=&#34;super saya&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Applications will be able to deploy themselves automatically, write test cases in case of an error automatically and push the test cases to the repositories. They will have smart self detection capabilities and join orchestration platforms. In case that the configuration needs to be adjusted the ML assistants can perform those corrections on the fly. In case of disaster they will perform self patching and self healing based on the desired state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In that case, humans will only play a really small part on this, by the moment you deploy the app. AI and ML assistants will have their own continuous delivery pipelines and they will perform intelligent and autonomous deployments and configuration management in the most efficient manner.&lt;/p&gt;
&lt;p&gt;In case of disaster, they will perform all necessary operations to restore service. Patch systems, offload traffic, rollback etc.&lt;/p&gt;
&lt;p&gt;In the future, everything will be deployed as &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux_containers&#34;&gt;containers&lt;/a&gt; in a more &lt;a href=&#34;https://en.wikipedia.org/wiki/Decentralization&#34;&gt;decentralized&lt;/a&gt; cloud space. They will be private and public examples of course but it will be more ubiquitous and frictionless.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;transformation-4-entire-software-development-lifecycle-will-be-only-a-high-level-description&#34;&gt;Transformation 4: Entire Software Development Lifecycle will be only a High-Level Description&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#transformation-4-entire-software-development-lifecycle-will-be-only-a-high-level-description&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;images/tran-4.jpg&#34; alt=&#34;Over 9000&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From the initial concept to the end product together with the whole lifecycle: product launch running, maintenance product enhancements and product decommission will be declared and controlled in a single file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In that phase, humans will only be observers both in terms of development and in terms of permissions. They will only express ideas and the rest will be handled by the ML assistants. They will be able to test ideas in terms of factors they add in the project declaration file and possibly some constraints in terms of recourses available. The ML and AI assistants will be able to figure out the rest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thus the role of the developer will be mostly associated with improving the algorithm to produce the most cost efficient and profitable results.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The new era of programming will be focused on producing software models that are competing for each other in terms of intelligent solutions and implementations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Everything related to programming will be a smart solution that will enable humanity reduce risk to their everyday life to 99.99% while maximising happiness and longevity to 99.99%.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;The current traditional way of programming will be obsolete, as it will outperform any human made solutions.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Everyone will have assistants powered by AI and ML software that will help us turn ideas to real world applications on the fly.&lt;/p&gt;
&lt;p&gt;That will boost entrepreneurship and innovation to the roof. People will be talking about best ways to train algorithmic models to take us to the nearest Earth-like planet or finding a solution to a sustainable environment that will make our lives happier.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course, there has to be some sort of control because humans also have the tendency to self-destroy and take advantage of each other. Maybe though we will have assistants that will prevent us from doing harm! Who knows!&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;verdict&#34;&gt;Verdict&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#verdict&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Are you ready for the future? It&amp;rsquo;s exciting!&lt;/p&gt;
&lt;p&gt;I reference some links to get started:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/josephmisiti/awesome-machine-learning&#34;&gt;Awesome Machine Learning&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/owainlewis/awesome-artificial-intelligence&#34;&gt;Awesome Artificial Intelligence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/services/machine-learning/&#34;&gt;Azure Machine Learning&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009&#34;&gt;Udacity Nanodegree&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Happy coding.&lt;/p&gt;</description></item><item><title>How to be an awesome programmer</title><link>https://theodesp.github.io/codethat/article/how-to-be-an-awesome-programmer/</link><pubDate>Tue, 08 Aug 2017 14:15:59 -0600</pubDate><guid>https://theodesp.github.io/codethat/article/how-to-be-an-awesome-programmer/</guid><description>&lt;p&gt;You wake up one morning after having a revelation, you decide to do one good thing in your life,
instead of your usual rant. You think, OK I’ve been a jackass lately at work and I want to
start being nice to others. Maybe I was too harsh to the new recruits and I didn’t want to
make them cry on their first day. I want to make a difference today.&lt;/p&gt;
&lt;p&gt;Stop where you are.&lt;/p&gt;
&lt;p&gt;This is a guide to help you become &lt;strong&gt;the most awesome programmer&lt;/strong&gt; in the whole world.
It&amp;rsquo;s easy. You only have to pay attention as this is important.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;escape-from-the-cave&#34;&gt;Escape from the Cave&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#escape-from-the-cave&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;images/escape-cave.jpg&#34; alt=&#34;getOut&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Hey if you are still programming like you are living in the cave, hiding stuff for yourself or idealising your abstractions and minimising other people effort, bragging your self out like you are the god-programmer with 100x productivity or whatever you want to call it, please stop it before you proceed further.&lt;/p&gt;
&lt;p&gt;Acting like that will not get you further. You will always be a caveman in others people eyes.&lt;/p&gt;
&lt;p&gt;Do something different instead. Showcase your code, share your opinions, don’t minimise other opinions different than your own and stop calling yourself productive for the first time.&lt;/p&gt;
&lt;p&gt;That will help you follow the next advice.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;be-a-role-model&#34;&gt;Be a role model&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#be-a-role-model&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;You can be awesome. If you respect yourself as much as you respect your work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Of humility&lt;/strong&gt;. Being humble is not a bad thing. You will not only better liked, as you might imagine, but you will also more effective. This will help you maintain a self-control that will make the other people near you feel safer. They will value you more gracefully and will more likely be less prejudiced of your actions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Of your work ethics&lt;/strong&gt;. It&amp;rsquo;s important to maintain your integrity and when asked to always give constructive and honest feedback. You need to act with a responsibility for your actions. Don’t hide staff under the carpet not thinking that other people near you will not notice. Have some chip on your shoulder. Do not let the quality bar fall for any reason. Be consistent on your commitments and keep an eye on other people to motivate them as you go along. This will help you establish a zone of awesomeness when people are around you.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After you have mastered that you are ready for the next advice.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;be-an-effective-team-member&#34;&gt;Be an effective Team Member&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#be-an-effective-team-member&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Programmers become more effective and efficient at creating software by improving their ability to understand, communicate with, and collaborate with other people.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;By building trust&lt;/strong&gt;. If people trust you they will help you. If not they will ignore you. Trust is not assumed. It’s gained. So in order to gain or build trust, you need to trust other people. That may be the most difficult part for some people.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;By showing respect&lt;/strong&gt;. You are not alone. Before you enter work, drop your ego to the floor. You will be giving criticism as well as receiving criticism a lot, so you better learn how to accept it. Even if they come from the newest team members, with less experience from you. You have to show respect and listen. Practice on your wordings. Instead of saying “hey this is stupid or “this is crap start talking about “confusing factors or “it&amp;rsquo;s not obvious that way, maybe if you can do it differently”. Discuss not attack.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;By living in the ground, not in the sky&lt;/strong&gt;. No-one likes a smart ass. Be humble and not provoke your fellow teammates with pointless arguments. Remember, you are human and not Superman. Instead, build on your social skills. Have fun by being a genuine person.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Remember:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Software Development is a Team Effort. No single piece of successful software was build by one person.&lt;/p&gt;
&lt;p&gt;Drop your ego to the floor and start taking responsibility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you follow the next advice you will achieve godly status.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;be-a-leader&#34;&gt;Be a leader&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#be-a-leader&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;You don’t learn much if you work alone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Of team Culture&lt;/strong&gt;. Value code reviews, test-driven development, good design docs, team social events. Maintain an ethos or a principles list that all should respect and defend. Otherwise, it will be a chaotic mess and the one shouting the most will prevail. It will be a mad max world with lots of aggression, ad-hocism and randomness.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Of performance&lt;/strong&gt;. Promote consensus driven development. This may mean you may drive some processes from start to finish, or you just give it a gentle push in the right direction to speed it up. Grab people out of their desks if you think the process is driving to a halt. By grabbing of course I mean being on top of any problems. Make sure you grab the right people at the right time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Working alone is inherently riskier than working with others
Focus on the people as much as you focus on the code.
A 10x programmer with a -10x peoples skills is an impediment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;No amount of smarts or knowledge can substitute good team-working spirit.&lt;/p&gt;
&lt;h3 class=&#34;category-title&#34; id=&#34;verdict&#34;&gt;Verdict&lt;a class=&#34;fragment-identifier js-fragment-identifier fragment-identifier-scroll&#34; href=&#34;#verdict&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Building a healthy software development culture is more like an art than a trait as it depends solely on genuine interactions between teams. Not having those is like binding wood and steel together with glue. No matter how well you apply the glue, it will eventually break…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Skilled leaders serve their teams, not the opposite.&lt;/strong&gt;
Other wise it would be too easy to take advantage of the situation and to fulfil their own agendas.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shipping great software requires shaping great relationships first.&lt;/strong&gt;
That applies to any shippable goods that involve collaboration, not only software or services.&lt;/p&gt;
&lt;p&gt;I hope you take that on board on your next social interaction. Until then I wish you fare well.&lt;/p&gt;
&lt;p&gt;Happy coding.&lt;/p&gt;</description></item></channel></rss>